<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Available Donations - FoodYield</title>
    <link rel="icon" href="./files/logo.png">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Paytone+One&family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/boxicons@latest/css/boxicons.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
    * {
        padding: 0;
        margin: 0;
        box-sizing: border-box;
        font-family: 'Poppins', sans-serif;
        text-decoration: none;
        list-style: none;
        scroll-behavior: smooth;
    }

    /* Navbar */
    .navbar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        background: rgba(0, 20, 40, 0.95);
        color: white;
        padding: 0.5rem 2rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        display: flex;
        justify-content: space-between;
        align-items: center;
        z-index: 1000;
    }

    .navbar-logo {
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .logo {
        width: 50px;
        height: 50px;
    }

    .website-name {
        font-size: 1.8rem;
        font-weight: bold;
        letter-spacing: 0.5px;
        margin-top: 7px;
    }

    .highlight-food {
        color: #007bff;
    }

    .navbar-links {
        display: flex;
        gap: 1.5rem;
    }

    .nav-link {
        color: #fff;
        font-size: 1.1rem;
        font-weight: 600;
        padding: 5px 10px;
        transition: all 0.3s ease;
    }

    .nav-link:hover {
        color: #0a0a0a;
        background: #007bff;
        border-radius: 5px;
        box-shadow: 0 0 15px rgba(0, 123, 255, 0.4);
    }

    /* Hamburger Menu */
    .hamburger {
        display: none;
        flex-direction: column;
        gap: 5px;
        background: none;
        border: none;
        cursor: pointer;
        padding: 8px;
    }

    .hamburger .line {
        width: 30px;
        height: 3px;
        background: white;
        border-radius: 2px;
        transition: all 0.3s ease;
    }

    .hamburger.active .line:nth-child(1) {
        transform: translateY(8px) rotate(45deg);
    }
    .hamburger.active .line:nth-child(2) {
        opacity: 0;
    }
    .hamburger.active .line:nth-child(3) {
        transform: translateY(-8px) rotate(-45deg);
    }

    /* Main Content */
    .available-food {
        padding: 100px 5% 50px;
        min-height: 100vh;
        background-color: #0a0a0a;
        color: white;
    }

    .page-title {
        margin-bottom: 40px;
        text-align: center;
    }

    .page-title h1 {
        font-size: 2.5rem;
        margin-bottom: 15px;
        line-height: 1.2;
    }

    .page-title h1 span {
        color: #007bff;
    }

    .page-title p {
        font-size: 1.1rem;
        color: #aaa;
        max-width: 700px;
        margin: 0 auto;
    }

    /* Filter Container */
    .filter-container {
        display: flex;
        justify-content: space-between;
        margin-bottom: 30px;
        flex-wrap: wrap;
        gap: 15px;
        background: #191919;
        padding: 20px;
        border-radius: 10px;
    }

    .filter-group {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
        flex-grow: 1;
    }

    .filter-select, .search-box {
        padding: 12px 15px;
        background-color: #0a0a0a;
        color: white;
        border: 1px solid #333;
        border-radius: 8px;
        font-size: 1rem;
        min-width: 200px;
        flex-grow: 1;
    }

    .filter-select {
        cursor: pointer;
    }
 /* Adjust the dropdown arrow position and size */
.filter-select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='white'%3e%3cpath d='M7 10l5 5 5-5z'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 12px center;
    background-size: 20px; /* Increased from 16px to 20px */
    padding-right: 40px; /* Increased from 35px to 40px to accommodate larger icon */
}

    .search-box {
        width: 100%;
        max-width: 400px;
    }

    /* Food Listings */
    .food-listings {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 25px;
    }

    .food-card {
        background-color: #191919;
        border-radius: 10px;
        overflow: hidden;
        transition: all 0.3s ease;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .food-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 123, 255, 0.2);
    }

    .food-info {
        padding: 20px;
    }

    .food-title {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        flex-wrap: wrap;
        gap: 10px;
    }

    .food-title h3 {
        font-size: 1.3rem;
        color: white;
        line-height: 1.3;
    }

    .category-badge {
        font-size: 0.8rem;
        padding: 5px 12px;
        border-radius: 20px;
        color: white;
        font-weight: 500;
        white-space: nowrap;
    }

    .veg {
        background-color: #28a745;
    }

    .non-veg {
        background-color: #dc3545;
    }

    .groceries {
        background-color: #fd7e14;
    }

    .both {
        background-color: #6f42c1;
    }

    .food-details {
        margin-bottom: 20px;
    }

    .food-details p {
        margin-bottom: 12px;
        color: #aaa;
        font-size: 0.95rem;
        line-height: 1.5;
    }

    .food-details i {
        color: #007bff;
        margin-right: 8px;
        width: 16px;
        text-align: center;
    }

    .food-quantity {
        font-size: 1.1rem;
        color: white;
        margin-bottom: 20px;
        font-weight: 600;
        text-align: center;
        padding: 10px;
        background: rgba(0, 123, 255, 0.1);
        border-radius: 5px;
    }

    .action-btn {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 8px;
        width: 100%;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

    .action-btn:hover {
        background-color: #0056b3;
        transform: scale(1.02);
        box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3);
    }

    .no-results {
        grid-column: 1 / -1;
        text-align: center;
        padding: 40px;
        color: #666;
        font-size: 1.1rem;
        font-style: italic;
        background: #191919;
        border-radius: 10px;
    }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1001;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.7);
        backdrop-filter: blur(5px);
    }

    .modal-content {
        background-color: #191919;
        margin: auto;
        padding: 30px;
        border-radius: 10px;
        width: 90%;
        max-width: 500px;
        box-shadow: 0 0 30px rgba(0, 123, 255, 0.3);
        color: white;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        max-height: 90vh;
        overflow-y: auto;
    }

    
    .close-btn {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
        transition: color 0.3s;
        line-height: 1;
    }

    .close-btn:hover {
        color: white;
    }

    .modal-title {
        margin-bottom: 25px;
        font-size: 1.5rem;
        padding-bottom: 10px;
        border-bottom: 1px solid #333;
    }

    .request-form input, 
    .request-form textarea {
        width: 100%;
        padding: 12px 15px;
        background-color: #0a0a0a;
        font-size: 1rem;
        border: 1px solid #333;
        border-radius: 8px;
        margin-bottom: 20px;
        color: white;
    }

    .request-form label {
        display: block;
        margin-bottom: 8px;
        color: #aaa;
        font-size: 0.95rem;
    }

    .request-form textarea {
        resize: vertical;
        min-height: 120px;
    }

    .success-message {
        display: none;
        background-color: #28a745;
        color: white;
        padding: 15px;
        margin-top: 20px;
        border-radius: 5px;
        text-align: center;
        font-size: 1rem;
    }

    .error-message {
        color: white;
        background-color: #dc3545;
        padding: 15px;
        margin-top: 20px;
        border-radius: 5px;
        text-align: center;
        font-size: 1rem;
        display: none;
    }

    small {
        color: #aaa;
        font-size: 0.85rem;
        display: block;
        margin-top: -15px;
        margin-bottom: 15px;
    }

    /* Footer */
    .footer {
        background-color: #001529;
        padding: 30px 0 15px;
    }

    .footer-content {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
        padding: 20px 5%;
        max-width: 1200px;
        margin: 0 auto;
        gap: 30px;
    }

    .footlinks h4,
    .footlinkss h4 {
        margin-top: 0;
        font-size: 1.2rem;
        font-weight: 600;
        color: white;
        margin-bottom: 20px;
        position: relative;
    }

    .footlinks h4::before {
        content: "";
        position: absolute;
        height: 2px;
        width: 50px;
        left: 0;
        bottom: -7px;
        background: #007bff;
    }

    .footlinks ul li {
        margin-bottom: 12px;
    }

    .footlinks ul li a {
        font-size: 0.95rem;
        color: #dddddd;
        display: block;
        transition: all 0.3s ease;
    }

    .footlinks ul li a:hover {
        transform: translateX(6px);
        color: #007bff;
    }

    .social {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .social a {
        font-size: 1.2rem;
        height: 40px;
        width: 40px;
        color: #001529;
        background-color: #007bff;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        transition: all 0.3s ease;
    }

    .social a:hover {
        transform: scale(1.1);
        background-color: white;
        color: #007bff;
    }

    .end {
        text-align: center;
        padding-top: 20px;
        color: #a0a0a0;
        font-size: 0.9rem;
        margin-top: 20px;
    }

    /* Fade Animation */
    .fade-in {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    }

    .fade-in.show {
        opacity: 1;
        transform: translateY(0);
    }

    /* Responsive Design */
    @media screen and (max-width: 768px) {
        .navbar {
            padding: 0.5rem 1rem;
        }
        
        .website-name {
            font-size: 1.5rem;
        }
        
        .logo {
            width: 40px;
            height: 40px;
        }

        .navbar-links {
            display: none;
            flex-direction: column;
            gap: 1rem;
            position: absolute;
            top: 70px;
            right: 15px;
            background: rgba(0, 20, 40, 0.95);
            padding: 1.5rem;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
            width: auto;
            min-width: 200px;
            text-align: left;
            opacity: 0;
            transform: translateY(-10px);
            transition: all 0.3s ease-out;
        }

        .navbar-links.active {
            display: flex;
            opacity: 1;
            transform: translateY(0);
        }

        .nav-link {
            font-size: 1rem;
            padding: 8px 12px;
        }

        .hamburger {
            display: flex;
        }

        .available-food {
            padding: 90px 5% 40px;
        }

        .page-title h1 {
            font-size: 2rem;
        }

        .page-title p {
            font-size: 1rem;
        }

        .filter-container {
            flex-direction: column;
            padding: 15px;
        }

        .filter-group {
            flex-direction: column;
            width: 100%;
            gap: 10px;
        }

        .filter-select, .search-box {
            width: 100%;
            min-width: auto;
        }

        .food-listings {
            grid-template-columns: 1fr;
        }

        .modal-content {
            width: 95%;
            padding: 20px;
        }
    }

    @media screen and (max-width: 480px) {
        .page-title h1 {
            font-size: 1.8rem;
        }
        
        .food-card {
            min-width: 0;
        }
        
        .footer-content {
            flex-direction: column;
            gap: 20px;
        }
        
        .footlinkss h4 {
            margin-left: 0;
        }
    }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="navbar-logo">
            <img src="files/logo.png" alt="Logo" class="logo">
            <span class="website-name">Food<span class="highlight-food">Yield</span></span>
        </div>
        <div class="navbar-links">
            <a href="/" class="nav-link">Home</a>
            <a href="/info" class="nav-link">Donate</a>
            <a href="/reqfood" class="nav-link">Ask for Donate</a>
            <a href="/viewrequests" class="nav-link">Requests</a>
            <a href="/donations" class="nav-link active">Available Donations</a>
            <a href="/register" class="nav-link">Administration</a>
        </div>
        <button class="hamburger" onclick="toggleMenu()">
            <div class="line"></div>
            <div class="line"></div>
            <div class="line"></div>
        </button>
    </nav>

    <section class="available-food fade-in">
        <div class="page-title fade-in">
            <h1>Available <span>Donations</span></h1>
            <p>Browse through available food donations and request what you need</p>
        </div>
        
        <div class="filter-container fade-in">
            <div class="filter-group">
                <select class="filter-select" id="categoryFilter">
                    <option value="all">All Categories</option>
                    <option value="Veg">Vegetarian</option>
                    <option value="Non-Veg">Non-Vegetarian</option>
                    <option value="Groceries">Groceries</option>
                    <option value="Both">Both</option>
                </select>
                
                <select class="filter-select" id="sortFilter">
                    <option value="newest">Newest First</option>
                    <option value="expiry">Expiry Date</option>
                    <option value="quantity">Highest Quantity</option>
                </select>
            </div>
            
            <input type="text" class="search-box" id="searchBox" placeholder="Search by location or donor name...">
        </div>
        
        <div class="food-listings" id="foodListings">
            <% if (donations && donations.length > 0) { %>
                <% donations.forEach(donation => { %>
                    <div class="food-card fade-in" data-id="<%= donation._id %>" data-category="<%= donation.category %>">
                        <div class="food-info">
                            <div class="food-title">
                                <h3><%= donation.name %></h3>
                                <span class="category-badge <%= donation.category.toLowerCase().replace('-', '') %>"><%= donation.category %></span>
                            </div>
                            <div class="food-details">
                                <p><i class="fas fa-building"></i> <%= donation.company %></p>
                                <p><i class="fas fa-map-marker-alt"></i> <%= donation.address %></p>
                                <p><i class="fas fa-calendar-alt"></i> Prepared: <%= new Date(donation.prepDateTime).toLocaleString() %></p>
                                <p><i class="fas fa-clock"></i> Expires: <%= new Date(donation.expiryDate).toLocaleDateString() %></p>
                                <% if (donation.specialNote) { %>
                                    <p><i class="fas fa-sticky-note"></i> <%= donation.specialNote %></p>
                                <% } %>
                            </div>
                            <div class="food-quantity">
                                Available: <%= donation.availableQuantity %> kg
                            </div>
                            <button class="action-btn request-btn" data-id="<%= donation._id %>" data-max="<%= donation.availableQuantity %>">
                                <i class="fas fa-hand-holding-heart"></i> Request This Food
                            </button>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="no-results fade-in">
                    <p>No food donations available at the moment. Please check back later.</p>
                </div>
            <% } %>
        </div>
    </section>

    <!-- Request Modal -->
    <div id="requestModal" class="modal">
        <div class="modal-content">
            <span class="close-btn" id="closeModal">&times;</span>
            <h2 class="modal-title">Request Food</h2>
            <form id="requestForm" class="request-form">
                <input type="hidden" id="donationId" name="donationId">
                <input type="hidden" id="maxQuantity" name="maxQuantity">
                
                <div>
                    <label for="requesterName">Your Name</label>
                    <input type="text" id="requesterName" name="requesterName" placeholder="Enter Name" required>
                </div>
                
                <div>
                    <label for="requestedQuantity">How much do you need? (kg)</label>
                    <input type="number" id="requestedQuantity" name="requestedQuantity" min="0.1" step="0.1" placeholder="Enter Quantity" required>
                    <small id="quantityHelper">Maximum available: <span id="availableQuantity"></span> kg</small>
                </div>
                
                <div>
                    <label for="requestSummary">Request Summary (Optional)</label>
                    <textarea id="requestSummary" name="requestSummary" placeholder="Let the donor know why you need this food or how it will be used..."></textarea>
                </div>
                
                <button type="submit" class="action-btn">
                    <i class="fas fa-paper-plane"></i> Send Request
                </button>
            </form>
            <div id="successMessage" class="success-message">
                <i class="fas fa-check-circle"></i> Request has been sent to the donor successfully!
            </div>
            <div id="errorMessage" class="error-message"></div>
        </div>
    </div>

    <section class="footer">
        <div class="footer-content">
            <div class="footlinks">
                <h4>Quick Links</h4>
                <ul>
                    <li><a href="/info">Donate</a></li>
                    <li><a href="/about">About Us</a></li>
                    <li><a href="/contact">Contact Us</a></li>
                </ul>
            </div>
            <div class="footlinkss">
                <h4>Connect</h4>
                <div class="social">
                    <a href="#"><i class='bx bxl-facebook'></i></a>
                    <a href="#"><i class='bx bxl-instagram'></i></a>
                    <a href="#"><i class='bx bxl-twitter'></i></a>
                    <a href="#"><i class='bx bxl-linkedin'></i></a>
                </div>
            </div>
        </div>
        <div class="end">
            <p>Copyright © 2023 FoodYield | All Rights Reserved.</p>
        </div>
    </section>

    <script>
        // Hamburger menu toggle function
        function toggleMenu() {
            const navbarLinks = document.querySelector('.navbar-links');
            const hamburger = document.querySelector('.hamburger');
            navbarLinks.classList.toggle('active');
            hamburger.classList.toggle('active');
        }

        // Click outside to close menu
        document.addEventListener('click', function(event) {
            const navbar = document.querySelector('.navbar');
            const navbarLinks = document.querySelector('.navbar-links');
            const hamburger = document.querySelector('.hamburger');

            if (!navbar.contains(event.target) && !hamburger.contains(event.target)) {
                navbarLinks.classList.remove('active');
                hamburger.classList.remove('active');
            }
        });

        // Fade-in animation
        document.addEventListener("DOMContentLoaded", () => {
            const fadeInElements = document.querySelectorAll('.fade-in');

            const observer = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('show');
                        observer.unobserve(entry.target);
                    }
                });
            }, { threshold: 0.1 });

            fadeInElements.forEach(el => observer.observe(el));
        });

        // Modal functionality
        document.addEventListener('DOMContentLoaded', function() {
            // Get DOM elements
            const requestButtons = document.querySelectorAll('.request-btn');
            const requestModal = document.getElementById('requestModal');
            const closeModalBtn = document.getElementById('closeModal');
            const requestForm = document.getElementById('requestForm');
            const donationIdInput = document.getElementById('donationId');
            const maxQuantityInput = document.getElementById('maxQuantity');
            const requestedQuantityInput = document.getElementById('requestedQuantity');
            const availableQuantitySpan = document.getElementById('availableQuantity');
            const successMessage = document.getElementById('successMessage');
            const errorMessage = document.getElementById('errorMessage');
            
            // Add event listeners to all request buttons
            requestButtons.forEach(btn => {
                btn.addEventListener('click', function() {
                    const donationId = this.getAttribute('data-id');
                    const maxQuantity = this.getAttribute('data-max');
                    
                    // Set values in the form
                    donationIdInput.value = donationId;
                    maxQuantityInput.value = maxQuantity;
                    availableQuantitySpan.textContent = maxQuantity;
                    
                    // Set max attribute for quantity input
                    requestedQuantityInput.max = maxQuantity;
                    
                    // Show the modal
                    requestModal.style.display = 'block';
                    document.body.style.overflow = 'hidden'; // Prevent scrolling
                    
                    // Reset form and messages
                    requestForm.reset();
                    successMessage.style.display = 'none';
                    errorMessage.style.display = 'none';
                });
            });
            
            // Close modal when X is clicked
            closeModalBtn.addEventListener('click', function() {
                requestModal.style.display = 'none';
                document.body.style.overflow = 'auto'; // Re-enable scrolling
            });
            
            // Close modal when clicking outside
            window.addEventListener('click', function(event) {
                if (event.target === requestModal) {
                    requestModal.style.display = 'none';
                    document.body.style.overflow = 'auto'; // Re-enable scrolling
                }
            });
            
            // Handle request form submission
            requestForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const donationId = donationIdInput.value;
                const requesterName = document.getElementById('requesterName').value;
                const requestedQuantity = parseFloat(requestedQuantityInput.value);
                const requestSummary = document.getElementById('requestSummary').value;
                const maxQuantity = parseFloat(maxQuantityInput.value);
                
                // Validate quantity
                if (requestedQuantity <= 0) {
                    showError('Please enter a valid quantity.');
                    return;
                }
                
                if (requestedQuantity > maxQuantity) {
                    showError(`The requested quantity exceeds the available amount (${maxQuantity} kg).`);
                    return;
                }
                
                // Send request to server
                fetch('/api/requests', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        donationId,
                        requesterName,
                        requestedQuantity,
                        requestSummary
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Show success message
                        successMessage.style.display = 'block';
                        errorMessage.style.display = 'none';
                        
                        // Disable form
                        const formElements = requestForm.elements;
                        for (let i = 0; i < formElements.length; i++) {
                            formElements[i].disabled = true;
                        }
                        
                        // Close modal after 3 seconds
                        setTimeout(() => {
                            requestModal.style.display = 'none';
                            document.body.style.overflow = 'auto'; // Re-enable scrolling
                            // Refresh the page to update available quantities
                            window.location.reload();
                        }, 3000);
                    } else {
                        showError(data.message || 'An error occurred while processing your request.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showError('An error occurred. Please try again.');
                });
            });
            
            // Show error message
            function showError(message) {
                errorMessage.innerHTML = `<i class="fas fa-exclamation-circle"></i> ${message}`;
                errorMessage.style.display = 'block';
                successMessage.style.display = 'none';
            }
            
            // Filter functionality
            function applyFilters() {
                const category = categoryFilter.value;
                const searchTerm = searchBox.value.toLowerCase();
                const cards = document.querySelectorAll('.food-card');
                
                cards.forEach(card => {
                    const cardCategory = card.getAttribute('data-category');
                    const cardText = card.textContent.toLowerCase();
                    
                    let categoryMatch = category === 'all' || cardCategory === category;
                    let searchMatch = searchTerm === '' || cardText.includes(searchTerm);
                    
                    if (categoryMatch && searchMatch) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
                
                // Check if any cards are visible
                checkNoResults();
            }
            
            // Check if no results are found
            function checkNoResults() {
                const visibleCards = document.querySelectorAll('.food-card[style="display: block;"]');
                const noResultsDiv = document.querySelector('.no-results');
                
                if (visibleCards.length === 0) {
                    // If no existing no-results div, create one
                    if (!noResultsDiv) {
                        const div = document.createElement('div');
                        div.className = 'no-results fade-in';
                        div.innerHTML = '<p>No food donations match your filters. Try adjusting your search criteria.</p>';
                        foodListings.appendChild(div);
                        // Trigger fade-in animation
                        setTimeout(() => div.classList.add('show'), 10);
                    } else {
                        noResultsDiv.style.display = 'block';
                    }
                } else if (noResultsDiv) {
                    noResultsDiv.style.display = 'none';
                }
            }
            
            // Get filter elements
            const categoryFilter = document.getElementById('categoryFilter');
            const searchBox = document.getElementById('searchBox');
            const sortFilter = document.getElementById('sortFilter');
            const foodListings = document.getElementById('foodListings');
            
            // Add event listeners for filtering
            if (categoryFilter) categoryFilter.addEventListener('change', applyFilters);
            if (searchBox) searchBox.addEventListener('input', applyFilters);
            
            // Sort functionality
            if (sortFilter) {
                sortFilter.addEventListener('change', function() {
                    const cards = Array.from(document.querySelectorAll('.food-card'));
                    const sortBy = this.value;
                    
                    cards.sort((a, b) => {
                        if (sortBy === 'newest') {
                            // Already sorted by newest in the backend
                            return 0;
                        } else if (sortBy === 'expiry') {
                            // Sort by expiry date (closest first)
                            const aExpiry = a.querySelector('.food-details p:nth-child(4)').textContent;
                            const bExpiry = b.querySelector('.food-details p:nth-child(4)').textContent;
                            const aDate = new Date(aExpiry.replace('Expires: ', ''));
                            const bDate = new Date(bExpiry.replace('Expires: ', ''));
                            return aDate - bDate;
                        } else if (sortBy === 'quantity') {
                            // Sort by quantity (highest first)
                            const aQuantity = parseFloat(a.querySelector('.food-quantity').textContent.match(/\d+(\.\d+)?/)[0]);
                            const bQuantity = parseFloat(b.querySelector('.food-quantity').textContent.match(/\d+(\.\d+)?/)[0]);
                            return bQuantity - aQuantity;
                        }
                        return 0;
                    });
                    
                    // Reappend cards in the new order
                    cards.forEach(card => {
                        foodListings.appendChild(card);
                    });
                    
                    // Reapply filters after sorting
                    applyFilters();
                });
            }
        });
    </script>
</body>
</html>